{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class IngSearchPipe {\n  transform(value, ...args) {\n    //if ingredient is blank,return fulll array\n    if (args[0] === '') {\n      return value;\n    }\n    let searchResult = [];\n    //Loop through value to look for ingredients\n    for (let i = 0; i < value.length; i++) {\n      for (let j = 0; j < value[i].ingredients.length; j++) {\n        let ing = args[0];\n        if (value[i].ingredients[j].indexOf(ing) != -1) {\n          searchResult.push(value[i]);\n          break;\n        }\n      }\n    }\n    return searchResult;\n  }\n}\nIngSearchPipe.ɵfac = function IngSearchPipe_Factory(t) {\n  return new (t || IngSearchPipe)();\n};\nIngSearchPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"ingSearch\",\n  type: IngSearchPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,aAAa;EAExBC,SAAS,CAACC,KAAU,EAAE,GAAGC,IAAW;IAClC;IACA,IAAGA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;MAAC,OAAOD,KAAK;;IAEhC,IAAIE,YAAY,GAAU,EAAE;IAC5B;IACA,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;MAC/B,KAAI,IAAIE,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACL,KAAK,CAACG,CAAC,CAAC,CAACG,WAAW,CAACF,MAAM,EAAEC,CAAC,EAAE,EAAC;QAC9C,IAAIE,GAAG,GAAGN,IAAI,CAAC,CAAC,CAAC;QACjB,IAAGD,KAAK,CAACG,CAAC,CAAC,CAACG,WAAW,CAACD,CAAC,CAAC,CAACG,OAAO,CAACD,GAAG,CAAC,IAAI,CAAC,CAAC,EAAC;UAC5CL,YAAY,CAACO,IAAI,CAACT,KAAK,CAACG,CAAC,CAAC,CAAC;UAC3B;;;;IAIN,OAAOD,YAAY;EACrB;;AAlBWJ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;;QAAbA,aAAa;EAAAY;AAAA","names":["IngSearchPipe","transform","value","args","searchResult","i","length","j","ingredients","ing","indexOf","push","pure"],"sourceRoot":"","sources":["C:\\Users\\bajio\\Desktop\\Anjali\\frameworks\\angular\\tcs\\Day8_aNGULAR\\Application\\frontend\\src\\app\\pipes\\ing-search.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'ingSearch'\n})\nexport class IngSearchPipe implements PipeTransform {\n\n  transform(value: any, ...args: any[]): any {\n    //if ingredient is blank,return fulll array\n    if(args[0] === '') {return value;}\n    \n    let searchResult: any[] = []\n    //Loop through value to look for ingredients\n    for(let i=0; i<value.length; i++){\n      for(let j=0; j<value[i].ingredients.length; j++){\n        let ing = args[0];\n        if(value[i].ingredients[j].indexOf(ing) != -1){\n          searchResult.push(value[i]);\n          break;\n        }\n      }\n    }\n    return searchResult;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}